// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hartigan_wong
Rcpp::List hartigan_wong(Rcpp::NumericMatrix x, Rcpp::NumericMatrix init);
RcppExport SEXP _kmeans_tests_hartigan_wong(SEXP xSEXP, SEXP initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type init(initSEXP);
    rcpp_result_gen = Rcpp::wrap(hartigan_wong(x, init));
    return rcpp_result_gen;
END_RCPP
}
// lloyd
Rcpp::List lloyd(Rcpp::NumericMatrix x, Rcpp::NumericMatrix init);
RcppExport SEXP _kmeans_tests_lloyd(SEXP xSEXP, SEXP initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type init(initSEXP);
    rcpp_result_gen = Rcpp::wrap(lloyd(x, init));
    return rcpp_result_gen;
END_RCPP
}
// variance_partition
Rcpp::List variance_partition(Rcpp::NumericMatrix x, int ncenters);
RcppExport SEXP _kmeans_tests_variance_partition(SEXP xSEXP, SEXP ncentersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type ncenters(ncentersSEXP);
    rcpp_result_gen = Rcpp::wrap(variance_partition(x, ncenters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kmeans_tests_hartigan_wong", (DL_FUNC) &_kmeans_tests_hartigan_wong, 2},
    {"_kmeans_tests_lloyd", (DL_FUNC) &_kmeans_tests_lloyd, 2},
    {"_kmeans_tests_variance_partition", (DL_FUNC) &_kmeans_tests_variance_partition, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_kmeans_tests(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
